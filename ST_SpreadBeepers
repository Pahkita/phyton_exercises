#In this task Karel starts by standing on a pile of beepers that Karel needs to spread out along the row. Here is an example before and after.
#You may assume that:
#There is only one row in the world
#Karel starts with infinite beepers in her bag
#The pile of beepers is on the second corner, directly in front of where Karel starts
#The world is wide enough for all the beepers, with at least one beeper at the end
#Write the code to implement Spread Beepers Karel. Come up with a strategy first. Think, "what are the high-level steps Karel needs to take?" and make these steps into helper functions. Remember that your program should work for a pile of any size. 


from karel.stanfordkarel import *

"""
Each row starts with a stack of beepers. Karel should pick them
up, one at a time, and spread them down the row. 
Caution! Karel can't count, and starts with infinite beepers infinite
her bag. How can you solve this puzzle?
"""
"""
Move to the second place, pick the beeper (all), restart, and 

"""

def main():
    move()
    while beepers_present():
        pick()
        go_back()
        move()
        if beepers_present():
            drop()
            go_back()
            move()
    put_beeper()
    go_back()
        
    
def pick():
    if beepers_present():
        pick_beeper()

def drop(): 
    while beepers_present():
        move()
    put_beeper()

def go_back():
    turn_around()
    while front_is_clear():
        move()
    turn_around()
        
def turn_around():
    turn_left()
    turn_left()
    
# There is no need to edit code beyond this point
if __name__ == '__main__':
    main()
